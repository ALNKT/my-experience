from house import House
import random
from time import sleep


class Pet:
    """
    –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–æ–º–∞—à–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ

    __total_cat_food (int): –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—ä–µ–¥–µ–Ω–Ω–æ–≥–æ –∫–æ—Ä–º–∞ –∂–∏–≤–æ—Ç–Ω—ã–º

    Args:
        name (str): –∏–º—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
        satiety (int): —Å—Ç–µ–ø–µ–Ω—å —Å—ã—Ç–æ—Å—Ç–∏ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
        cat_house (class): –¥–æ–º, –≤ –∫–æ—Ç–æ—Ä–æ–º –∂–∏–≤–µ—Ç –∂–∏–≤–æ—Ç–Ω–æ–µ
    """
    __total_cat_food = 0

    def __init__(self, name, owner, satiety=30, cat_house=House()):
        self.__name = name
        self.__satiety = satiety
        self.__cat_house = cat_house
        self.__owner = owner

    def __str__(self):
        return f'\n–ò–º—è: {self.__name}\n–°—ã—Ç–æ—Å—Ç—å: {self.__satiety}'

    def get_name(self):
        """
        –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –¥–æ–º–∞—à–Ω–µ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ

        @return: __name
        @rtype: str
        """
        return self.__name

    def get_satiety(self):
        """
        –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —Å—ã—Ç–æ—Å—Ç–∏ –¥–æ–º–∞—à–Ω–µ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ

        @return: __satiety
        @rtype: int
        """
        return self.__satiety

    def get_cat_house(self):
        """
        –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–º–∞ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ

        @return: __cat_house
        @rtype: class
        """
        return self.__cat_house

    def get_total_cat_food(self):
        """
        –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª-–≤–∞ —Å—ä–µ–¥–µ–Ω–Ω–æ–≥–æ –∫–æ—Ä–º–∞
        @return: __total_cat_food
        @rtype: int
        """
        return self.__total_cat_food

    def set_total_cat_food(self, cat_food):
        """
        –°–µ—Ç—Ç–µ—Ä –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—ä–µ–¥–µ–Ω–Ω–æ–≥–æ –∫–æ—Ä–º–∞

        @param cat_food: –∫–æ–ª-–≤–æ —Å—ä–µ–¥–µ–Ω–Ω–æ–≥–æ –∫–æ—Ä–º–∞
        @type cat_food:
        """
        self.__total_cat_food += cat_food

    def set_satiety(self, satiety):
        """
        –°–µ—Ç—Ç–µ—Ä –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å—ã—Ç–æ—Å—Ç–∏ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ

        @param satiety: –Ω–æ–≤–∞—è —Å—ã—Ç–æ—Å—Ç—å
        @type satiety: int
        """
        self.__satiety = satiety

    def eat(self):
        """
        –ö–æ—Ä–º–ª–µ–Ω–∏–µ –∫–æ—Ç–∞. –ï—Å–ª–∏ –∫–æ—Ä–º–∞ –≤ –¥–æ–º–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –∫–æ—Ç –µ—Å—Ç, –∏–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ö–æ–∑—è–µ–≤ –∑–∞ –∫–æ—Ä–º–æ–º.
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª-–≤–æ –∫–æ—Ä–º–∞ –æ—Ç 1 –¥–æ 10 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ), –∫–æ—Ç–æ—Ä–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ —Å—ä–µ–¥–∞–µ—Ç
        """
        if self.__cat_house.get_cat_food() > 10:
            amount_of_food = random.randint(1, 10)
            print(f'\n{self.__name} –µ—Å—Ç...')
            for _ in range(7):
                sleep(0.2)
                print('üç≤ ', end=' ')
            sleep(0.2)
            self.__satiety += amount_of_food * 2
            self.__cat_house.set_cat_food(self.__cat_house.get_cat_food() - amount_of_food)
            self.__total_cat_food += amount_of_food
            print(f'{self.__name}: "–ú—è—É".\n{self.__name} –Ω–∞–∫–æ—Ä–º–ª–µ–Ω, —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—ã—Ç–æ—Å—Ç–∏: {self.__satiety}')
        else:
            print(f'{self.__name} –≥–æ–ª–æ–¥–µ–Ω! –ö–æ—Ä–º–∞ –Ω–µ—Ç! –Ω—É–∂–Ω–æ –∫—É–ø–∏—Ç—å!')
            self.__owner.buy_cat_food()

    def sleep(self):
        """
        –ü–µ—Ä—Å–æ–Ω–∞–∂ –ª–æ–∂–∏—Ç—Å—è —Å–ø–∞—Ç—å
        –°—ã—Ç–æ—Å—Ç—å —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –Ω–∞ 10
        """
        if self.__satiety > 10:
            print(f'\n–ù–∞—à {self.__name} —Ä–µ—à–∏–ª –≤–∑–¥—Ä–µ–º–Ω—É—Ç—å.')
            self.__satiety -= 10
        else:
            print(f'–ù–∞—à {self.__name} –Ω–µ –º–æ–∂–µ—Ç —Å–ø–∞—Ç—å! –ï–≥–æ –Ω—É–∂–Ω–æ –ø–æ–∫–æ—Ä–º–∏—Ç—å')
            self.eat()

    def life(self):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∂–∏–≤ –ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂. –ï—Å–ª–∏ —Å—ã—Ç–æ—Å—Ç—å –ø–∞–¥–∞–µ—Ç –Ω–∏–∂–µ 0 –∏–ª–∏ —Å—á–∞—Å—Ç—å–µ –Ω–∏–∂–µ 10, —Ç–æ –ø–µ—Ä—Å–æ–Ω–∞–∂ —É–º–∏—Ä–∞–µ—Ç.
        –¢–∞–∫–∂–µ —Ç—É—Ç –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª-–≤–æ –≥—Ä—è–∑–∏ –≤ –¥–æ–º–µ, –µ—Å–ª–∏ –æ–Ω–æ –±–æ–ª—å—à–µ 90 –ø—É–Ω–∫—Ç–æ–≤, —Ç–æ —Å—á–∞—Å—Ç—å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø–∞–¥–∞–µ—Ç –Ω–∞ 10

        @return: False, –µ—Å–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ —É–º–µ—Ä, True, –µ—Å–ª–∏ –∂–∏–≤
        @rtype: boolean
        """
        if self.__satiety < 0:
            return False
        return True

    def one_action(self):
        """
        –°–æ–≤–µ—Ä—à–∞–µ–º –æ–¥–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º.
        –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—ã—Ç–æ—Å—Ç—å, –µ—Å–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ –≥–æ–ª–æ–¥–µ–Ω, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ—Å—Ç—å.
        @return: True, –µ—Å–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –µ—Å—Ç—å, –∏–Ω–∞—á–µ False
        @rtype: boolean
        """
        if self.__satiety < 10:
            self.eat()
            return True
        return False


class Cat(Pet):
    """
    –ö–ª–∞—Å—Å –∫–æ—Ç. –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–ª–∞—Å—Å Pet

    Args:
        name (str): –∏–º—è –∫–æ—Ç–∞
        satiety (int): —Å—Ç–µ–ø–µ–Ω—å —Å—ã—Ç–æ—Å—Ç–∏ –∫–æ—Ç–∞
        cat_house (class): –¥–æ–º, –≤ –∫–æ—Ç–æ—Ä–æ–º –∂–∏–≤–µ—Ç –∫–æ—Ç
    """

    def __init__(self, name, owner, satiety=30, cat_house=House()):
        super().__init__(name, owner, satiety, cat_house)

    def tear_up_the_wallpaper(self):
        """
        –ö–æ—Ç –¥–µ—Ä–µ—Ç –æ–±–æ–∏. –ü—Ä–∏ —ç—Ç–æ —Å—ã—Ç–æ—Å—Ç—å –∫–æ—Ç–∞ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –Ω–∞ 10, –∞ –≥—Ä—è–∑—å –≤ –¥–æ–º–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 5
        """
        if self.get_satiety() > 10:
            print(f'\n–ù–∞—à {self.get_name()} –¥–µ—Ä–µ—Ç –æ–±–æ–∏!')
            self.set_satiety(self.get_satiety() - 10)
            self.get_cat_house().set_dirt(self.get_cat_house().get_dirt() + 5)
            self.get_cat_house()
            self.get_cat_house().set_total_dirt(5)
        else:
            print(f'–ù–∞—à {self.get_name()} –≥–æ–ª–æ–¥–µ–Ω! –ï–≥–æ –Ω—É–∂–Ω–æ –ø–æ–∫–æ—Ä–º–∏—Ç—å')
            self.eat()

    def one_action(self):
        """
        –°–æ–≤–µ—Ä—à–∞–µ–º –æ–¥–Ω–æ —Å–ª—É—á–∞–π–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∫–æ—Ç–æ–º.
        """
        if not super().one_action():
            actions = ['eat', 'sleep', 'tear_up_the_wallpaper']
            getattr(self, random.choice(actions))()
