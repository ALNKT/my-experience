from house import House
from time import sleep
import random


class People:
    """
    –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –ß–µ–ª–æ–≤–µ–∫

    __total_earned: –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–µ–Ω–µ–≥
    __total_eat: –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—ä–µ–¥–µ–Ω–Ω–æ–π –µ–¥—ã
    __total_coat: –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —à—É–±
    __total_money_spent: –æ–±—â–µ–µ –∫–æ–ª-–≤–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –¥–µ–Ω–µ–≥

    Args:
        name (str): –∏–º—è —á–µ–ª–æ–≤–µ–∫–∞
        satiety (int): —Å—Ç–µ–ø–µ–Ω—å —Å—ã—Ç–æ—Å—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞
        happiness (int): —Å—Ç–µ–ø–µ–Ω—å —Å—á–∞—Å—Ç—å—è —á–µ–ª–æ–≤–µ–∫–∞
        my_house (class): –¥–æ–º, –≤ –∫–æ—Ç–æ—Ä–æ–º –∂–∏–≤–µ—Ç —á–µ–ª–æ–≤–µ–∫
    Attributes:
        earned (int): —É—Ä–æ–≤–µ–Ω—å –∑–∞—Ä–ø–ª–∞—Ç—ã —á–µ–ª–æ–≤–µ–∫–∞
    """
    earned = 150
    __total_earned = 0
    __total_eat = 0
    __total_coat = 0
    __total_money_spent = 0

    def __init__(self, name, satiety=30, happiness=100, my_house=House()):
        self.__name = name
        self.__satiety = satiety
        self.__happiness = happiness
        self.__house = my_house

    def get_total_earned(self):
        """
        –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª-–≤–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–µ–Ω–µ–≥
        @return: __total_earned
        @rtype: int
        """
        return self.__total_earned

    def get_total_eat(self):
        """
        –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª-–≤–∞ —Å—ä–µ–¥–µ–Ω–Ω–æ–π –µ–¥—ã
        @return: __total_eat
        @rtype: int
        """
        return self.__total_eat

    def get_total_coat(self):
        """
        –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª-–≤–∞ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —à—É–±
        @return: __total_coat
        @rtype: int
        """
        return self.__total_coat

    def get_total_money_spent(self):
        """
        –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª-–≤–∞ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –¥–µ–Ω–µ–≥
        @return: __total_money_spent
        @rtype: int
        """
        return self.__total_money_spent

    def get_name(self):
        """
        –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ —á–µ–ª–æ–≤–µ–∫–∞

        @return: __name
        @rtype: str
        """
        return self.__name

    def get_satiety(self):
        """
        –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —Å—ã—Ç–æ—Å—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞

        @return: __satiety
        @rtype: int
        """
        return self.__satiety

    def get_happiness(self):
        """
        –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —Å—á–∞—Å—Ç—å—è —á–µ–ª–æ–≤–µ–∫–∞

        @return: __happiness
        @rtype: int
        """
        return self.__happiness

    def get_house(self):
        """
        –ì–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–º–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –∂–∏–≤–µ—Ç —á–µ–ª–æ–≤–µ–∫

        @return: __house
        @rtype: class
        """
        return self.__house

    def set_total_earned(self, amount_earned):
        """
        –°–µ—Ç—Ç–µ—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª-–≤–∞ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–µ–Ω–µ–≥

        @param amount_earned: –∫–æ–ª-–≤–æ –¥–µ–Ω–µ–≥
        @type amount_earned: int
        """
        self.__total_earned += amount_earned

    def set_total_eat(self, amount_eat):
        """
        –°–µ—Ç—Ç–µ—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª-–≤–∞ —Å—ä–µ–¥–µ–Ω–Ω–æ–π –µ–¥—ã
        @param amount_eat: –∫–æ–ª-–≤–æ –µ–¥—ã
        @type amount_eat: int
        """
        self.__total_eat += amount_eat

    def set_total_coat(self, amount_coat):
        """
        –°–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–≥–æ –∫–æ–ª-–≤–∞ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —à—É–±
        @param amount_coat: –∫–æ–ª-–≤–æ —à—É–±
        @type amount_coat: int
        """
        self.__total_coat += amount_coat

    def set_total_money_spent(self, amount_money):
        """
        –°–µ—Ç—Ç–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –¥–µ–Ω–µ–≥
        @param amount_money: –∫–æ–ª-–≤–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –¥–µ–Ω–µ–≥
        @type amount_money: int
        """
        self.__total_money_spent += amount_money

    def set_name(self, name):
        """
        –°–µ—Ç—Ç–µ—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ —á–µ–ª–æ–≤–µ–∫–∞

        @param name: –Ω–æ–≤–æ–µ –∏–º—è —á–µ–ª–æ–≤–µ–∫–∞
        @type name: str
        """
        self.__name = name

    def set_satiety(self, satiety):
        """
        –°–µ—Ç—Ç–µ—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —Å—ã—Ç–æ—Å—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞

        @param satiety: –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å —Å—ã—Ç–æ—Å—Ç–∏ —á–µ–ª–æ–≤–µ–∫–∞
        @type satiety: int
        """
        self.__satiety = satiety

    def set_happiness(self, happiness):
        """
        –°–µ—Ç—Ç–µ—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —Å—á–∞—Å—Ç—å—è —á–µ–ª–æ–≤–µ–∫–∞

        @param happiness: –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è —á–µ–ª–æ–≤–µ–∫–∞
        @type happiness: int
        """
        self.__happiness = happiness

    def __str__(self):
        return ('\n–ò–º—è: {name}\n–£—Ä–æ–≤–µ–Ω—å —Å—ã—Ç–æ—Å—Ç–∏: {satiety}\n–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è: {happiness}\n–î–æ–º: {house}\n'
                '–ë—ã–ª–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–µ–Ω–µ–≥: {money} —Ä—É–±.\n–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –¥–µ–Ω–µ–≥: {spent} —Ä—É–±.\n–°—ä–µ–¥–µ–Ω–æ –µ–¥—ã: {food} –∫–≥.\n'
                '–ö—É–ø–ª–µ–Ω–æ —à—É–±: {coat} —à—Ç.'.
                format(name=self.__name, satiety=self.__satiety, happiness=self.__happiness,
                       house=self.__house.get_name(), money=self.__total_earned, spent=self.__total_money_spent,
                       food=self.__total_eat, coat=self.__total_coat))

    def eat(self):
        """
        –ß–µ–ª–æ–≤–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ç—Ä–∞–ø–µ–∑–Ω–∏—á–∞—Ç—å. –ü—Ä–∏ —ç—Ç–æ–º —Ä–∞–Ω–¥–æ–º–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Å—ã—Ç–æ—Å—Ç—å —á–µ–ª–æ–≤–µ–∫–∞
        –∏ –Ω–∞ —Ç–∞–∫–æ–µ –∂–µ –∫–æ–ª-–≤–æ —É–º–µ–Ω—å—à–∞—é—Ç—Å—è –∑–∞–ø–∞—Å—ã –µ–¥—ã –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ

        @return: –ï—Å–ª–∏ –µ–¥—ã –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ, —á–µ–ª–æ–≤–µ–∫ –µ—Å—Ç. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è True, –∏–Ω–∞—á–µ False
        @rtype: boolean
        """

        amount_of_food = random.randint(1, 30)
        if self.__house.get_fridge() >= amount_of_food:
            print(f'\n{self.__name} –µ—Å—Ç...')
            for _ in range(7):
                sleep(0.2)
                print('üç∞ ', end=' ')
            sleep(0.2)
            self.__satiety += amount_of_food
            self.__house.set_fridge(self.__house.get_fridge() - amount_of_food)
            self.__total_eat += amount_of_food
            print(f'{self.get_name()}: "–ö–∞–∫–∞—è –≤–∫—É—Å–Ω–∞—è –µ–¥–∞!".\n–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—ã—Ç–æ—Å—Ç–∏: {self.__satiety}')
            return True
        return False

    def stroking_the_cat(self):
        """
        –ü–æ–≥–ª–∞–¥–∏—Ç—å –∫–æ—Ç–∞. –ü—Ä–∏ —ç—Ç–æ–º —Ä–∞—Å—Ç–µ—Ç —É—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –Ω–∞ 5 –ø—É–Ω–∫—Ç–æ–≤
        """
        if self.__satiety > 10:
            print(f'\n{self.__name} –≥–æ–≤–æ—Ä–∏—Ç: "–ö–∞–∫–æ–µ —Å—á–∞—Å—Ç—å–µ, –ø–æ–≥–ª–∞–¥–∏—Ç—å –∫–æ—Ç–∞!"')
            self.__satiety -= 10
            self.__happiness += 20
        else:
            print(f'{self.get_name()} –∫—Ä–∏—á–∏—Ç: "–Ø —Ö–æ—á—É –µ—Å—Ç—å!"')
            self.eat()

    def one_action(self):
        """
        –°–æ–≤–µ—Ä—à–∞–µ–º –æ–¥–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º
        @return: –µ—Å–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ –ø–æ–µ–ª, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º True, –∏–Ω–∞—á–µ False
        @rtype: boolean
        """
        if self.__satiety < 20:
            self.eat()
            return True
        return False

    def life(self, my_house):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∂–∏–≤ –ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂. –ï—Å–ª–∏ —Å—ã—Ç–æ—Å—Ç—å –ø–∞–¥–∞–µ—Ç –Ω–∏–∂–µ 0 –∏–ª–∏ —Å—á–∞—Å—Ç—å–µ –Ω–∏–∂–µ 10, —Ç–æ –ø–µ—Ä—Å–æ–Ω–∞–∂ —É–º–∏—Ä–∞–µ—Ç.
        –¢–∞–∫–∂–µ —Ç—É—Ç –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª-–≤–æ –≥—Ä—è–∑–∏ –≤ –¥–æ–º–µ, –µ—Å–ª–∏ –æ–Ω–æ –±–æ–ª—å—à–µ 90 –ø—É–Ω–∫—Ç–æ–≤, —Ç–æ —Å—á–∞—Å—Ç—å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø–∞–¥–∞–µ—Ç –Ω–∞ 10

        @return: False, –µ—Å–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ —É–º–µ—Ä, True, –µ—Å–ª–∏ –∂–∏–≤
        @rtype: boolean
        """
        if my_house.get_dirt() > 90:
            self.__happiness -= 10
        if self.__satiety < 0 or self.__happiness < 10:
            return False
        return True


class Husband(People):
    """
    –ö–ª–∞—Å—Å –ú—É–∂

    Args:
        name (str): –ò–º—è –º—É–∂–∞
        satiety (int): —Å—Ç–µ–ø–µ–Ω—å —Å—ã—Ç–æ—Å—Ç–∏ –º—É–∂–∞
        happiness (int): —Å—Ç–µ–ø–µ–Ω—å —Å—á–∞—Å—Ç—å—è –º—É–∂–∞
        house_of_husband (class): –¥–æ–º, –≤ –∫–æ—Ç–æ—Ä–æ–º –∂–∏–≤–µ—Ç –º—É–∂
    """

    def __init__(self, name, satiety=30, happiness=100, house_of_husband=House(), my_wife=None):
        super().__init__(name, satiety, happiness, house_of_husband)
        self.__wife = my_wife

    def set_wife(self, my_wife):
        """
        –°–µ—Ç—Ç–µ—Ä –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞ __wife

        @param my_wife: –Ω–æ–≤–∞—è –∂–µ–Ω–∞
        @type my_wife: class
        """
        self.__wife = my_wife

    def eat(self):
        """
        –ß–µ–ª–æ–≤–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ç—Ä–∞–ø–µ–∑–Ω–∏—á–∞—Ç—å. –ü—Ä–∏ —ç—Ç–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞, –≥–¥–µ
        —Ä–∞–Ω–¥–æ–º–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Å—ã—Ç–æ—Å—Ç—å —á–µ–ª–æ–≤–µ–∫–∞
        –∏ –Ω–∞ —Ç–∞–∫–æ–µ –∂–µ –∫–æ–ª-–≤–æ —É–º–µ–Ω—å—à–∞—é—Ç—Å—è –∑–∞–ø–∞—Å—ã –µ–¥—ã –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ
        –ï—Å–ª–∏ –ø–æ–ø—ã—Ç–∫–∞ –ø–æ–µ—Å—Ç—å –Ω–µ—É—Å–ø–µ—à–Ω–∞—è, —Ç.–µ. –µ–¥—ã –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∂–µ–Ω—ã –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
        """

        if not super().eat():
            print(
                f'{self.get_name()} –∫—Ä–∏—á–∏—Ç: "–£ –Ω–∞—Å –Ω–µ—Ç –µ–¥—ã! {self.__wife.get_name()}! '
                f'–°—Ä–æ—á–Ω–æ –±–µ–≥–∏ –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏!"')
            self.__wife.run_for_food()

    def playing(self):
        """
        –ß–µ–ª–æ–≤–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∏–≥—Ä–∞—Ç—å –≤ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∏–≥—Ä—ã. –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Å—á–∞—Å—Ç—å–µ –Ω–∞ 10 –∏ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è —Å—ã—Ç–æ—Å—Ç—å –Ω–∞ 10
        –ï—Å–ª–∏ —Å—ã—Ç–æ—Å—Ç–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—Å—è –µ—Å—Ç—å
        """
        games = ['God of War', 'Uncharted', '–ö–æ—Å—ã–Ω–∫—É', '–°–æ–ª–∏—Ç–µ—Ä', '–ü–æ–∫–µ—Ä']
        if self.get_satiety() > 10:
            self.set_satiety(self.get_satiety() - 10)
            self.set_happiness(self.get_happiness() + 20)
            game = random.choice(games)
            print(f'\n{self.get_name()} —Ä–µ—à–∏–ª –ø–æ–∏–≥—Ä–∞—Ç—å –≤ {game}!')
            for _ in range(7):
                sleep(0.2)
                print('üéÆ ', end=' ')
            sleep(0.2)
            print(
                f'{self.get_name()}: "–û–±–æ–∂–∞—é —ç—Ç—É –∏–≥—Ä—É! –¢–µ–ø–µ—Ä—å —è —Å—Ç–∞–ª —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ!"\n'
                f'–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è: {self.get_happiness()}!')
        else:
            print(f'{self.get_name()}: "–Ø –≥–æ–ª–æ–¥–µ–Ω!!! –ë—ã—Å—Ç—Ä–µ–µ –∫ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫—É!"')
            self.eat()

    def working(self):
        """
        –ß–µ–ª–æ–≤–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É. –ü—Ä–∏ —ç—Ç–æ–º —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è —Å—ã—Ç–æ—Å—Ç—å –Ω–∞ 10 –∏ —á–µ–ª–æ–≤–µ–∫ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–Ω—å–≥–∏.
        –£—Ä–æ–≤–µ–Ω—å –∑–∞—Ä–ø–ª–∞—Ç—ã —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º –∫–ª–∞—Å—Å–µ.
        –ï—Å–ª–∏ —Å—ã—Ç–æ—Å—Ç–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—Å—è –µ—Å—Ç—å.
        """
        if self.get_satiety() > 10:
            print(f'\n{self.get_name()} –ø—Ä–∏—Å—Ç—É–ø–∞–µ—Ç –∫ —Ç—è–∂–µ–ª–æ–º—É —Ç—Ä—É–¥—É...')
            for _ in range(7):
                sleep(0.2)
                print('üî® ', end=' ')
            sleep(0.2)
            self.set_satiety(self.get_satiety() - 10)
            self.get_house().set_money(self.get_house().get_money() + People.earned)
            self.set_total_earned(People.earned)
            print('–†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°—ã—Ç–æ—Å—Ç—å —É–ø–∞–ª–∞ –Ω–∞ 10. –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ {} —Ä—É–±. '
                  '\n–ù–∞—à –±—é–¥–∂–µ—Ç: {}    {}, —É—Ä–æ–≤–µ–Ω—å —Å—ã—Ç–æ—Å—Ç–∏: {}'.
                  format(People.earned, self.get_house().get_money(), self.get_name(), self.get_satiety()))
        else:
            print(f'{self.get_name()} –∫—Ä–∏—á–∏—Ç: "–£ –º–µ–Ω—è –Ω–µ—Ç —Å–∏–ª —Ä–∞–±–æ—Ç–∞—Ç—å! –ù—É–∂–Ω–æ —Å—Ä–æ—á–Ω–æ –ø–æ–µ—Å—Ç—å!"')
            self.eat()

    def one_action(self):
        """
        –°–æ–≤–µ—Ä—à–∞–µ–º –æ–¥–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º.
        –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª-–≤–æ –¥–µ–Ω–µ–≥ –≤ –¥–æ–º–µ, —É—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –æ–¥–Ω–æ –∏–∑ –¥–≤—É—Ö –ª–∏–±–æ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
        """
        if not super().one_action():
            if self.get_house().get_money() < 150:
                self.working()
            elif self.get_happiness() < 10:
                self.playing()
            else:
                actions = ['eat', 'one_action', 'playing', 'stroking_the_cat', 'working']
                getattr(self, random.choice(actions))()


class Wife(People):
    """
    –ö–ª–∞—Å—Å –ñ–µ–Ω–∞

    Args:
        name (str): –∏–º—è –∂–µ–Ω—ã
        satiety (int): —Å—Ç–µ–ø–µ–Ω—å —Å—ã—Ç–æ—Å—Ç–∏ –∂–µ–Ω—ã
        happiness (int): —Å—Ç–µ–ø–µ–Ω—å —Å—á–∞—Å—Ç—å—è –∂–µ–Ω—ã
        house_of_wife (class): –¥–æ–º, –≤ –∫–æ—Ç–æ—Ä–æ–º –∂–∏–≤–µ—Ç –∂–µ–Ω–∞
    """

    def __init__(self, name, satiety=30, happiness=100, house_of_wife=House(), my_husband=None):
        super().__init__(name, satiety, happiness, house_of_wife)
        self.__husband = my_husband

    def set_husband(self, my_husband):
        """
        –°–µ—Ç—Ç–µ—Ä –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞ __husband

        @param my_husband: –Ω–æ–≤—ã–π –º—É–∂
        @type my_husband: class
        """
        self.__husband = my_husband

    def run_for_food(self):
        """
        –ü–æ—Ö–æ–¥ –∂–µ–Ω—ã –∑–∞ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –≤ –º–∞–≥–∞–∑–∏–Ω. –ü–æ—Ö–æ–¥ –≤–æ–∑–º–æ–∂–µ–Ω, –µ—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å —Å—ã—Ç–æ—Å—Ç–∏ –±–æ–ª—å—à–µ 10 –∏ –≤ –¥–æ–º–µ –±–æ–ª—å—à–µ 10 —Ä—É–±–ª–µ–π.
        –ü—Ä–∏ —ç—Ç–æ–º —Å—ã—Ç–æ—Å—Ç—å –ø–∞–¥–∞–µ—Ç –Ω–∞ 10 –∏ –¥–µ–Ω–µ–≥ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –Ω–∞ 10.
        –ï—Å–ª–∏ –µ–¥—ã –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—Å—è –µ—Å—Ç—å. –ï—Å–ª–∏ –¥–µ–Ω–µ–≥ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, —Ç–æ –æ–ø—Ä–∞–≤–ª—è–µ–º –º—É–∂–∞ —Ä–∞–±–æ—Ç–∞—Ç—å
        """
        if self.get_satiety() > 10 and self.get_house().get_money() > 60:
            self.set_satiety(self.get_satiety() - 10)
            print(f'\n{self.get_name()} –∫—Ä–∏—á–∏—Ç: "–Ø –ø–æ–±–µ–∂–∞–ª–∞ –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏!!!"')
            for _ in range(7):
                sleep(0.2)
                print('üõí ', end=' ')
            sleep(0.2)
            self.get_house().set_fridge(self.get_house().get_fridge() + 60)
            print(f'{self.get_name()} –∫—É–ø–∏–ª–∞ –Ω–∞–º –µ–¥—ã –Ω–∞ 60 —Ä—É–±.\n'
                  f'–¢–µ–ø–µ—Ä—å —É –Ω–∞—Å –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ {self.get_house().get_fridge()} –µ–¥—ã!')
            self.set_total_money_spent(60)
            self.get_house().set_money(self.get_house().get_money() - 60)
        elif self.get_satiety() <= 10:
            print(f'{self.get_name()} –∫—Ä–∏—á–∏—Ç: "–£ –º–µ–Ω—è –Ω–µ—Ç —Å–∏–ª –∏–¥—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω! –ù—É–∂–Ω–æ —Å—Ä–æ—á–Ω–æ –ø–æ–µ—Å—Ç—å!"')
            self.eat()
        elif self.get_house().get_money() <= 60:
            print(f'{self.get_name()} –∫—Ä–∏—á–∏—Ç: "–£ –Ω–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã! {self.__husband.get_name()}, '
                  f'—Å—Ä–æ—á–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É!"')
            self.__husband.working()

    def buy_cat_food(self):
        """
        –ü–æ–∫—É–ø–∫–∞ –∂–µ–Ω–æ–π –∫–æ—Ä–º–∞ –¥–ª—è –∫–æ—Ç–∞.
        –ï—Å–ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–∏–ª –∏ –¥–µ–Ω–µ–≥, —Ç–æ –ø–æ–∫—É–ø–∞–µ–º –∫–æ—Ä–º, –∏–Ω–∞—á–µ —Å–æ–æ–±—â–∞–µ–º, —á—Ç–æ —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç
        """
        if self.get_satiety() > 10 and self.get_house().get_money() > 10:
            self.set_satiety(self.get_satiety() - 10)
            print(f'\n{self.get_name()} –∫—Ä–∏—á–∏—Ç: "{self.__husband.get_name()}, —è –ø–æ–±–µ–∂–∞–ª–∞ –∑–∞ –∫–æ—Ä–º–æ–º –¥–ª—è –∫–æ—Ç–∞!!!"')
            for _ in range(7):
                sleep(0.2)
                print('üõí ', end=' ')
            sleep(0.2)
            self.get_house().set_cat_food(self.get_house().get_cat_food() + 10)
            print(f'{self.get_name()} –∫—É–ø–∏–ª–∞ –∫–æ—Ä–º –∫–æ—Ç—É –Ω–∞ 10 —Ä—É–±.\n'
                  f'–¢–µ–ø–µ—Ä—å —É –Ω–∞—Å –≤ –¥–æ–º–µ {self.get_house().get_cat_food()} –∫–æ—Ä–º–∞!')
            self.get_house().set_money(self.get_house().get_money() - 10)
            self.set_total_money_spent(10)
        elif self.get_satiety() <= 10:
            print(f'{self.get_name()} –∫—Ä–∏—á–∏—Ç: "–£ –º–µ–Ω—è –Ω–µ—Ç —Å–∏–ª –∏–¥—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω! –ù—É–∂–Ω–æ —Å—Ä–æ—á–Ω–æ –ø–æ–µ—Å—Ç—å!"')
            self.eat()
        elif self.get_house().get_money() <= 10:
            print(f'{self.get_name()} –∫—Ä–∏—á–∏—Ç: "–£ –Ω–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –∫–æ—Ä–º –¥–ª—è –∫–æ—Ç–∞! {self.__husband.get_name()}, '
                  f'—Å—Ä–æ—á–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É!"')
            self.__husband.working()

    def buy_coat(self):
        """
        –ü–æ—Ö–æ–¥ –∂–µ–Ω—ã –∑–∞ —à—É–±–æ–π –≤ –º–∞–≥–∞–∑–∏–Ω. –ü–æ—Ö–æ–¥ –≤–æ–∑–º–æ–∂–µ–Ω, –µ—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å —Å—ã—Ç–æ—Å—Ç–∏ –±–æ–ª—å—à–µ 10 –∏ –≤ –¥–æ–º–µ –±–æ–ª—å—à–µ 350 —Ä—É–±–ª–µ–π.
        –ü—Ä–∏ —ç—Ç–æ–º —Å—ã—Ç–æ—Å—Ç—å –ø–∞–¥–∞–µ—Ç –Ω–∞ 10 –∏ –¥–µ–Ω–µ–≥ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è –Ω–∞ 350.
        –ï—Å–ª–∏ –µ–¥—ã –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—Å—è –µ—Å—Ç—å. –ï—Å–ª–∏ –¥–µ–Ω–µ–≥ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, —Ç–æ –æ–ø—Ä–∞–≤–ª—è–µ–º –º—É–∂–∞ —Ä–∞–±–æ—Ç–∞—Ç—å
        """
        if self.get_satiety() > 10 and self.get_house().get_money() >= 350:
            print(f'\n{self.get_name()} –∫—Ä–∏—á–∏—Ç: "{self.__husband.get_name()}, —è –ø–æ—à–ª–∞ –ø–æ–∫—É–ø–∞—Ç—å —Å–µ–±–µ —à—É–±—É!"')
            for _ in range(7):
                sleep(0.2)
                print('üß• ', end=' ')
            sleep(0.2)
            self.set_satiety(self.get_satiety() - 10)
            self.get_house().set_money(self.get_house().get_money() - 350)
            self.set_happiness(self.get_happiness() + 60)
            self.set_total_coat(1)
            self.set_total_money_spent(350)
            print(f'{self.get_name()}: "–Ø –∫—É–ø–∏–ª–∞ —Å–µ–±–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω—É—é —à—É–±—É! –ü—Ä–∞–≤–¥–∞ –¥–æ—Ä–æ–≥–æ–≤–∞—Ç–æ... 350 —Ä—É–±."')
        elif self.get_satiety() <= 10:
            print(f'{self.get_name()} –∫—Ä–∏—á–∏—Ç: "–£ –º–µ–Ω—è –Ω–µ—Ç —Å–∏–ª –¥–æ–±–µ–∂–∞—Ç—å –¥–æ –º–∞–≥–∞–∑–∏–Ω–∞! –ù—É–∂–Ω–æ —Å—Ä–æ—á–Ω–æ –ø–æ–µ—Å—Ç—å!"')
            self.eat()
        elif self.get_house().get_money() <= 350:
            print(f'{self.get_name()} –∫—Ä–∏—á–∏—Ç: "–£ –Ω–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥ –Ω–∞ —à—É–±—É!! {self.__husband.get_name()}, '
                  f'—Å—Ä–æ—á–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É!"')
            self.__husband.working()

    def cleaning(self):
        """
        –£–±–æ—Ä–∫–∞ –≤ –¥–æ–º–µ. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—è–∑–∏. –ï—Å–ª–∏ —Å–∏–ª –Ω–∞ —É–±–æ—Ä–∫—É –Ω–µ—Ç, —Ç–æ –∂–µ–Ω–∞ –∏–¥–µ—Ç –µ—Å—Ç—å
        """
        if self.get_satiety() > 10:
            amount_of_dirt = random.randint(5, 100)
            print(f'\n{self.get_name()} –∫—Ä–∏—á–∏—Ç: "{self.__husband.get_name()}, —è –ø–æ—à–ª–∞ —É–±–∏—Ä–∞—Ç—å—Å—è –≤ –¥–æ–º–µ!"')
            for _ in range(7):
                sleep(0.2)
                print('üßπ ', end=' ')
            sleep(0.2)
            self.set_satiety(self.get_satiety() - 10)
            self.get_house().set_dirt(self.get_house().get_dirt() - amount_of_dirt)
            self.get_house().set_total_dirt(amount_of_dirt)
            print(f'{self.get_name()}: "–ö–∞–∫ –∂–µ —è —É—Å—Ç–∞–ª–∞ —É–±–∏—Ä–∞—Ç—å—Å—è. –ù–æ –≤ –¥–æ–º–µ —Å—Ç–∞–ª–æ —á–∏—â–µ –Ω–∞ {amount_of_dirt}%!"')
        else:
            print(f'{self.get_name()}: "–£ –º–µ–Ω—è –Ω–µ—Ç —Å–∏–ª —É–±–∏—Ä–∞—Ç—å—Å—è. –ù—É–∂–Ω–æ —Å—Ä–æ—á–Ω–æ –ø–æ–¥–∫—Ä–µ–ø–∏—Ç—å—Å—è!"')
            self.eat()

    def eat(self):
        """
        –ß–µ–ª–æ–≤–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ç—Ä–∞–ø–µ–∑–Ω–∏—á–∞—Ç—å. –ü—Ä–∏ —ç—Ç–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞, –≥–¥–µ
        —Ä–∞–Ω–¥–æ–º–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Å—ã—Ç–æ—Å—Ç—å —á–µ–ª–æ–≤–µ–∫–∞
        –∏ –Ω–∞ —Ç–∞–∫–æ–µ –∂–µ –∫–æ–ª-–≤–æ —É–º–µ–Ω—å—à–∞—é—Ç—Å—è –∑–∞–ø–∞—Å—ã –µ–¥—ã –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ
        –ï—Å–ª–∏ –ø–æ–ø—ã—Ç–∫–∞ –ø–æ–µ—Å—Ç—å –Ω–µ—É—Å–ø–µ—à–Ω–∞—è, —Ç.–µ. –µ–¥—ã –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∂–µ–Ω—ã –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
        """
        if not super().eat():
            print(
                f'{self.get_name()} –∫—Ä–∏—á–∏—Ç: "–£ –Ω–∞—Å –Ω–µ—Ç –µ–¥—ã! {self.__husband.get_name()}! '
                f'–Ø –ø–æ–±–µ–∂–∞–ª–∞ –≤ –º–∞–≥–∞–∑–∏–Ω –∑–∞ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏!"')
            self.run_for_food()

    def one_action(self):
        """
        –°–æ–≤–µ—Ä—à–∞–µ–º –æ–¥–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º.
        –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª-–≤–æ –µ–¥—ã –≤ –¥–æ–º–µ, –∫–æ–ª-–≤–æ –∫–æ—Ä–º–∞ –¥–ª—è –∫–æ—Ç–∞, —É—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –∏ —É—Ä–æ–≤–µ–Ω—å –≥—Ä—è–∑–∏ –≤ –¥–æ–º–µ.
        –í—ã–ø–æ–ª–Ω—è–µ–º –æ–¥–Ω–æ –∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π, –ª–∏–±–æ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
        """
        if not super().one_action():
            if self.get_house().get_fridge() < 60:
                self.run_for_food()
            elif self.get_house().get_cat_food() < 10:
                self.buy_cat_food()
            elif self.get_happiness() < 10:
                self.buy_coat()
            elif self.get_house().get_dirt() > 50:
                self.cleaning()
            else:
                actions = ['buy_cat_food', 'buy_coat', 'cleaning', 'eat', 'one_action', 'run_for_food',
                           'stroking_the_cat']
                getattr(self, random.choice(actions))()
